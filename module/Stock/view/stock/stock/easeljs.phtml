<canvas id="demoCanvas" width="1000" height="500" style="border:1px solid black;">
	Das ist ein Test.
</canvas>

<script src="/js/EaselJS-release_v0.6.1/lib/easeljs-0.6.1.min.js"></script>
<script>
	var prices = new Array();

	prices[0] = new Object();
	prices[0]['date'] = '2013-05-29';
	prices[0]['open'] = 75.00;
	prices[0]['high'] = 110.00;
	prices[0]['low'] = 60.00;
	prices[0]['close'] = 95.00;

	prices[1] = new Object();
	prices[1]['date'] = '2013-05-28';
	prices[1]['open'] = 80.00;
	prices[1]['high'] = 85.00;
	prices[1]['low'] = 65.00;
	prices[1]['close'] = 75.00;

	prices[2] = new Object();
	prices[2]['date'] = '2013-05-27';
	prices[2]['open'] = 110.00;
	prices[2]['high'] = 110.00;
	prices[2]['low'] = 80.00;
	prices[2]['close'] = 80.00;

	prices[3] = new Object();
	prices[3]['date'] = '2013-05-24';
	prices[3]['open'] = 115.00;
	prices[3]['high'] = 120.00;
	prices[3]['low'] = 95.00;
	prices[3]['close'] = 115.00;

	prices[4] = new Object();
	prices[4]['date'] = '2013-05-24';
	prices[4]['open'] = 90.00;
	prices[4]['high'] = 120.00;
	prices[4]['low'] = 75.00;
	prices[4]['close'] = 110.00;

	prices[5] = new Object();
	prices[5]['date'] = '2013-05-23';
	prices[5]['open'] = 80.00;
	prices[5]['high'] = 95.00;
	prices[5]['low'] = 65.00;
	prices[5]['close'] = 90.00;

	var stageWidth = 1000;
	var stageHeight = 500;

	var candleSlots = prices.length;
	var highest;
	var lowest;
	var onePixelPrice;
	var candleWidth;
	var candleMargin = 10;

	function calculateHighLowValues(prices) {

		highest = null;
		lowest = null;

		for (var i=0; i<prices.length; i++) {
			highest = highest === null || prices[i]['high'] > highest ? prices[i]['high'] : highest;
			lowest = lowest === null || prices[i]['low'] < lowest ? prices[i]['low'] : lowest;
		}

		var tmp = highest - lowest;
		onePixelPrice = tmp / stageHeight;

		candleWidth = ((stageWidth - candleMargin) / candleSlots) - candleMargin;
		candleWidth = Math.round(candleWidth);
	}

	function createCandleGraphicsObject(candle, leftMulti) {

		var right = stageWidth - candleMargin - ((leftMulti + 0) * (candleWidth + candleMargin));

		var shadowTop = (Math.round((highest - candle.high) / onePixelPrice));
		var shadowBottom = (Math.round((highest - candle.low) / onePixelPrice));

		var bodyLeft = right - candleWidth;
		var bodyRight = right;

		var middle = bodyLeft + ((bodyRight-bodyLeft)/2);

		if (candle.open == candle.close) {

			var height = candle.open - candle.close;
			var candleHeightInPixels = 1;

			var lengthTopShadow = candle.high - candle.open;
			var lenghtTopShadowInPixels = lengthTopShadow / onePixelPrice;

			var lengthBottomShadow = candle.close - candle.low;
			var lengthBottomShadowInPixels = lengthBottomShadow / onePixelPrice;

		}
		else {

			if (candle.open > candle.close) {

				var height = candle.open - candle.close;

				var candleHeightInPixels = height / onePixelPrice;

				var lengthTopShadow = candle.high - candle.open;
				var lenghtTopShadowInPixels = lengthTopShadow / onePixelPrice;

				var lengthBottomShadow = candle.close - candle.low;
				var lengthBottomShadowInPixels = lengthBottomShadow / onePixelPrice;

				var bodyColor = 'red';
			}
			else {

				var height = candle.close - candle.open;

				var candleHeightInPixels = height / onePixelPrice;

				var lengthTopShadow = candle.high - candle.close;
				var lenghtTopShadowInPixels = lengthTopShadow / onePixelPrice;

				var lengthBottomShadow = candle.open - candle.low;
				var lengthBottomShadowInPixels = lengthBottomShadow / onePixelPrice;

				var bodyColor = 'white';
			}
		}

		var candleTop = 0;
		var candleLeft = 0;

		var g = new createjs.Graphics();
		g.beginStroke(createjs.Graphics.getRGB(0,0,0));
		g.setStrokeStyle(1);
		g.beginFill(bodyColor);

		g.moveTo(candleWidth / 2, 0);
		g.lineTo(candleWidth / 2, lenghtTopShadowInPixels);

		var candleTop = lenghtTopShadowInPixels;

		g.drawRect(0, candleTop, candleWidth, candleHeightInPixels);

		var candleBottom = lenghtTopShadowInPixels + candleHeightInPixels;

		g.moveTo(candleWidth / 2, candleBottom);
		g.lineTo(candleWidth / 2, candleBottom + lengthBottomShadowInPixels);

		return g;
	}

	var stage;
	var update = true;
	var shape1, shape2, shape3;

	function init() {

		// stage initialisieren
		stage = new createjs.Stage("demoCanvas");
		stage.enableMouseOver();

		// text
		var text = new createjs.Text('ADS.de 080384', '13px Arial', '#000000');
		text.x = 4;
		text.y = 4;
		stage.addChild(text);

		calculateHighLowValues(prices);

		for (var i=0; i<prices.length; i++) {

			var obj = createCandleGraphicsObject(prices[i], i);

			var s = new createjs.Shape(obj);
			s.x = stageWidth - (candleWidth * (i + 1));
			s.x = s.x - ((i + 1) * candleMargin);

			var diff = highest - prices[i].high;
			var objectTop = diff / onePixelPrice;

			s.y = objectTop;

			stage.addChild(s);

		}

		// kreise zeichnen
//		var circle = new createjs.Shape();
//		circle.graphics.beginFill("red").drawCircle(0, 0, 50);
//		circle.x = 100;
//		circle.y = 100;
//		circle.onPress = pressHandler;
//		stage.addChild(circle);

		// stage aktualisieren
		stage.update();
		createjs.Ticker.addListener(window);
	}

	function pressHandler(e) {
		e.onMouseMove = function(ev) {
			e.target.x = ev.stageX;
			e.target.y = ev.stageY;
			update = true;
		}
	}

	function tick(){
		if (update) {
			update = false;
			stage.update();
		}
	}

	init();
</script>